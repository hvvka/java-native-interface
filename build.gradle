import org.gradle.internal.jvm.Jvm

group = 'com.hania'
version = '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'c'

mainClassName = 'com.hania.MainFrame'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

test {
    systemProperty "java.library.path", file("${buildDir}/libs/dotproduct/shared").absolutePath
}

run {
    systemProperty "java.library.path", file("${buildDir}/libs/dotproduct/shared").absolutePath
}

model {
    platforms {
        x64 {
            architecture "x64"
        }
    }

    components {
        dotproduct(NativeLibrarySpec) {
            binaries.all {
                if (targetPlatform.operatingSystem.macOsX) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include"
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/darwin"
                    cCompiler.args '-mmacosx-version-min=10.4'
                    linker.args '-mmacosx-version-min=10.4'
                } else if (targetPlatform.operatingSystem.linux) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include"
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/linux"
                    cCompiler.args '-D_FILE_OFFSET_BITS=64'
                } else if (targetPlatform.operatingSystem.windows) {
                    cCompiler.args "-I${Jvm.current().javaHome}/include"
                    cCompiler.args "-I${Jvm.current().javaHome}/include/win32"
                    linker.args "Shlwapi.lib", "Advapi32.lib"
                } else if (targetPlatform.operatingSystem.freeBSD) {
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include"
                    cCompiler.args '-I', "${Jvm.current().javaHome}/include/freebsd"
                }
            }
        }
    }
}

test.dependsOn 'dotproductSharedLibrary'
run.dependsOn 'dotproductSharedLibrary'